@model WebBanGiay.Models.Order

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/NhanVienBanHang/Views/Shared/_Layout_NVBH.cshtml";
}

<div class="container mx-auto px-4 py-8">
    <div class="flex items-center justify-between mb-6">
        <h1 class="text-2xl font-bold text-gray-800">Chỉnh sửa đơn hàng #@Model.OrderNumber</h1>
        <a href="@Url.Action("Index")" class="text-blue-600 hover:text-blue-800 flex items-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd" />
            </svg>
            Quay lại danh sách
        </a>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="bg-white shadow-md rounded-lg overflow-hidden">
            <div class="px-6 py-4 bg-gray-50 border-b border-gray-200">
                <h3 class="text-lg font-medium text-gray-900">Thông tin đơn hàng</h3>
            </div>

            <div class="px-6 py-4">
                @Html.ValidationSummary(true, "", new { @class = "text-red-600 mb-4" })
                @Html.HiddenFor(model => model.OrderID)

                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <!-- Column 1 -->
                    <div class="space-y-4">
                        <div>
                            @Html.LabelFor(model => model.OrderNumber, htmlAttributes: new { @class = "block text-sm font-medium text-gray-700 mb-1" })
                            @Html.EditorFor(model => model.OrderNumber, new { htmlAttributes = new { @class = "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" } })
                            @Html.ValidationMessageFor(model => model.OrderNumber, "", new { @class = "text-red-600 text-sm" })
                        </div>

                        <div>
                            @Html.LabelFor(model => model.CustomerID, "CustomerID", htmlAttributes: new { @class = "block text-sm font-medium text-gray-700 mb-1" })
                            @Html.DropDownList("CustomerID", null, htmlAttributes: new { @class = "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" })
                            @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-red-600 text-sm" })
                        </div>

                        <div>
                            @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "block text-sm font-medium text-gray-700 mb-1" })
                            @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" } })
                            @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-red-600 text-sm" })
                        </div>

                        <div>
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "block text-sm font-medium text-gray-700 mb-1" })
                            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" } })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-red-600 text-sm" })
                        </div>

                        <div>
                            @Html.LabelFor(model => model.SubTotal, htmlAttributes: new { @class = "block text-sm font-medium text-gray-700 mb-1" })
                            @Html.EditorFor(model => model.SubTotal, new { htmlAttributes = new { @class = "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" } })
                            @Html.ValidationMessageFor(model => model.SubTotal, "", new { @class = "text-red-600 text-sm" })
                        </div>

                        <div>
                            @Html.LabelFor(model => model.DiscountAmount, htmlAttributes: new { @class = "block text-sm font-medium text-gray-700 mb-1" })
                            @Html.EditorFor(model => model.DiscountAmount, new { htmlAttributes = new { @class = "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" } })
                            @Html.ValidationMessageFor(model => model.DiscountAmount, "", new { @class = "text-red-600 text-sm" })
                        </div>
                    </div>

                    <!-- Column 2 -->
                    <div class="space-y-4">
                        <div>
                            @Html.LabelFor(model => model.ShippingFee, htmlAttributes: new { @class = "block text-sm font-medium text-gray-700 mb-1" })
                            @Html.EditorFor(model => model.ShippingFee, new { htmlAttributes = new { @class = "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" } })
                            @Html.ValidationMessageFor(model => model.ShippingFee, "", new { @class = "text-red-600 text-sm" })
                        </div>

                        <div>
                            @Html.LabelFor(model => model.TotalAmount, htmlAttributes: new { @class = "block text-sm font-medium text-gray-700 mb-1" })
                            @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" } })
                            @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-red-600 text-sm" })
                        </div>

                        <div>
                            @Html.LabelFor(model => model.PaymentMethodID, "PaymentMethodID", htmlAttributes: new { @class = "block text-sm font-medium text-gray-700 mb-1" })
                            @Html.DropDownList("PaymentMethodID", null, htmlAttributes: new { @class = "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" })
                            @Html.ValidationMessageFor(model => model.PaymentMethodID, "", new { @class = "text-red-600 text-sm" })
                        </div>

                        <div>
                            @Html.LabelFor(model => model.PaymentStatus, htmlAttributes: new { @class = "block text-sm font-medium text-gray-700 mb-1" })
                            @Html.EditorFor(model => model.PaymentStatus, new { htmlAttributes = new { @class = "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" } })
                            @Html.ValidationMessageFor(model => model.PaymentStatus, "", new { @class = "text-red-600 text-sm" })
                        </div>

                        <div>
                            @Html.LabelFor(model => model.ShippingAddress, htmlAttributes: new { @class = "block text-sm font-medium text-gray-700 mb-1" })
                            @Html.EditorFor(model => model.ShippingAddress, new { htmlAttributes = new { @class = "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" } })
                            @Html.ValidationMessageFor(model => model.ShippingAddress, "", new { @class = "text-red-600 text-sm" })
                        </div>

                        <div>
                            @Html.LabelFor(model => model.ShippingPhone, htmlAttributes: new { @class = "block text-sm font-medium text-gray-700 mb-1" })
                            @Html.EditorFor(model => model.ShippingPhone, new { htmlAttributes = new { @class = "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" } })
                            @Html.ValidationMessageFor(model => model.ShippingPhone, "", new { @class = "text-red-600 text-sm" })
                        </div>
                    </div>
                </div>

                <!-- Additional fields -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
                    <div>
                        @Html.LabelFor(model => model.ShippingName, htmlAttributes: new { @class = "block text-sm font-medium text-gray-700 mb-1" })
                        @Html.EditorFor(model => model.ShippingName, new { htmlAttributes = new { @class = "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" } })
                        @Html.ValidationMessageFor(model => model.ShippingName, "", new { @class = "text-red-600 text-sm" })
                    </div>

                    <div>
                        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "block text-sm font-medium text-gray-700 mb-1" })
                        @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" } })
                        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-red-600 text-sm" })
                    </div>

                    <div>
                        @Html.LabelFor(model => model.PromotionID, "PromotionID", htmlAttributes: new { @class = "block text-sm font-medium text-gray-700 mb-1" })
                        @Html.DropDownList("PromotionID", null, htmlAttributes: new { @class = "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" })
                        @Html.ValidationMessageFor(model => model.PromotionID, "", new { @class = "text-red-600 text-sm" })
                    </div>

                    <div>
                        @Html.LabelFor(model => model.ProcessedBy, "ProcessedBy", htmlAttributes: new { @class = "block text-sm font-medium text-gray-700 mb-1" })
                        @Html.DropDownList("ProcessedBy", null, htmlAttributes: new { @class = "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" })
                        @Html.ValidationMessageFor(model => model.ProcessedBy, "", new { @class = "text-red-600 text-sm" })
                    </div>

                    <div>
                        @Html.LabelFor(model => model.ProcessedDate, htmlAttributes: new { @class = "block text-sm font-medium text-gray-700 mb-1" })
                        @Html.EditorFor(model => model.ProcessedDate, new { htmlAttributes = new { @class = "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" } })
                        @Html.ValidationMessageFor(model => model.ProcessedDate, "", new { @class = "text-red-600 text-sm" })
                    </div>
                </div>
            </div>

            <div class="px-6 py-4 bg-gray-50 border-t border-gray-200 flex justify-end">
                <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    <svg xmlns="http://www.w3.org/2000/svg" class="-ml-1 mr-2 h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                    </svg>
                    Lưu thay đổi
                </button>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
