@model WebBanGiay.Models.ProductVariant

@{
    ViewBag.Title = "Details";
    Layout = "~/Areas/Admin/Views/Shared/_Layout_Admin.cshtml";
}

<div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="flex justify-between items-center mb-8">
        <div>
            <h2 class="text-2xl font-bold text-gray-900">Product Variant Details</h2>
            <p class="mt-1 text-sm text-gray-500">Detailed information about this product variant</p>
        </div>
        <div class="flex space-x-3">
            <a href="@Url.Action("Index")" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                <svg class="-ml-1 mr-2 h-5 w-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
                </svg>
                Back to List
            </a>
            <a href="@Url.Action("Edit", new { id = Model.VariantID })" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                    <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                </svg>
                Edit
            </a>
        </div>
    </div>

    <div class="bg-white shadow overflow-hidden sm:rounded-lg">
        <div class="px-4 py-5 sm:px-6 border-b border-gray-200 bg-gray-50">
            <h3 class="text-lg leading-6 font-medium text-gray-900">Product Variant Information</h3>
            <p class="mt-1 max-w-2xl text-sm text-gray-500">Details and specifications</p>
        </div>
        <div class="px-4 py-5 sm:p-6">
            <dl class="grid grid-cols-1 gap-x-4 gap-y-8 sm:grid-cols-2">
                <div class="sm:col-span-1">
                    <dt class="text-sm font-medium text-gray-500">@Html.DisplayNameFor(model => model.SKU)</dt>
                    <dd class="mt-1 text-sm text-gray-900 font-semibold">@Html.DisplayFor(model => model.SKU)</dd>
                </div>

                <div class="sm:col-span-1">
                    <dt class="text-sm font-medium text-gray-500">@Html.DisplayNameFor(model => model.Price)</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Html.DisplayFor(model => model.Price)</dd>
                </div>

                <div class="sm:col-span-1">
                    <dt class="text-sm font-medium text-gray-500">@Html.DisplayNameFor(model => model.StockQuantity)</dt>
                    <dd class="mt-1 text-sm text-gray-900">
                        <div class="flex items-center">
                            @Html.DisplayFor(model => model.StockQuantity)
                            <span class="ml-2 text-xs text-gray-500">units in stock</span>
                        </div>
                    </dd>
                </div>

                <div class="sm:col-span-1">
                    <dt class="text-sm font-medium text-gray-500">@Html.DisplayNameFor(model => model.IsActive)</dt>
                    <dd class="mt-1 text-sm text-gray-900">
                        @if (Model.IsActive.GetValueOrDefault(false))
                        {
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                <svg class="-ml-0.5 mr-1.5 h-2 w-2 text-green-400" fill="currentColor" viewBox="0 0 8 8">
                                    <circle cx="4" cy="4" r="3" />
                                </svg>
                                Active
                            </span>
                        }
                        else
                        {
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                                <svg class="-ml-0.5 mr-1.5 h-2 w-2 text-gray-400" fill="currentColor" viewBox="0 0 8 8">
                                    <circle cx="4" cy="4" r="3" />
                                </svg>
                                Inactive
                            </span>
                        }
                    </dd>
                </div>

                <div class="sm:col-span-1">
                    <dt class="text-sm font-medium text-gray-500">Color</dt>
                    <dd class="mt-1 text-sm text-gray-900">
                        @if (Model.Color != null)
                        {
                            <div class="flex items-center">
                                @if (!string.IsNullOrEmpty(Model.Color.ColorCode))
                                {
                                    <div class="w-4 h-4 rounded-full border border-gray-300 mr-2"
                                         style="background-color: @Model.Color.ColorCode"></div>
                                }
                                @Model.Color.ColorName
                            </div>
                        }
                        else
                        {
                            <span class="text-gray-400">Not specified</span>
                        }
                    </dd>
                </div>

               <div class="sm:col-span-1">
                        <dt class="text-sm font-medium text-gray-500">@Html.DisplayNameFor(model => model.Product.ProductName)</dt>
                        <dd class="mt-1 text-sm text-gray-900">@Html.DisplayFor(model => model.Product.ProductName)</dd>
                    </div>

               <div class="sm:col-span-1">
                        <dt class="text-sm font-medium text-gray-500">@Html.DisplayNameFor(model => model.Size.SizeName)</dt>
                        <dd class="mt-1 text-sm text-gray-900">@Html.DisplayFor(model => model.Size.SizeName)</dd>
               </div>
            </dl>
        </div>
    </div>
</div>