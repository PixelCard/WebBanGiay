@model WebBanGiay.Models.ProductVariant

@{
    ViewBag.Title = "Delete";
    Layout = "~/Areas/NhanVienBanHang/Views/Shared/_Layout_NVBH.cshtml";
}

<div class="max-w-4xl mx-auto p-6">
    <div class="mb-8">
        <h2 class="text-2xl font-bold text-gray-800 mb-2">Delete Product Variant</h2>
        <div class="w-20 h-1 bg-red-500"></div>
    </div>

    <div class="bg-red-50 border-l-4 border-red-500 p-4 mb-8 rounded">
        <div class="flex items-start">
            <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-red-500" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
                </svg>
            </div>
            <div class="ml-3">
                <h3 class="text-lg font-medium text-red-800">Are you sure you want to delete this?</h3>
                <div class="mt-2 text-sm text-red-700">
                    <p>This action cannot be undone. All variant data will be permanently removed.</p>
                </div>
            </div>
        </div>
    </div>

    <div class="bg-white shadow-md rounded-lg overflow-hidden mb-8">
        <div class="px-6 py-4 border-b border-gray-200 bg-gray-50">
            <h4 class="text-lg font-medium text-gray-900">Product Variant Details</h4>
        </div>
        <div class="px-6 py-4">
            <dl class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div class="col-span-1">
                    <dt class="text-sm font-medium text-gray-500">@Html.DisplayNameFor(model => model.SKU)</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Html.DisplayFor(model => model.SKU)</dd>
                </div>

                <div class="col-span-1">
                    <dt class="text-sm font-medium text-gray-500">@Html.DisplayNameFor(model => model.Price)</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Html.DisplayFor(model => model.Price)</dd>
                </div>

                <div class="col-span-1">
                    <dt class="text-sm font-medium text-gray-500">@Html.DisplayNameFor(model => model.StockQuantity)</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Html.DisplayFor(model => model.StockQuantity)</dd>
                </div>

                <div class="col-span-1">
                    <dt class="text-sm font-medium text-gray-500">@Html.DisplayNameFor(model => model.IsActive)</dt>
                    <dd class="mt-1 text-sm text-gray-900">
                        @if (Model.IsActive.HasValue && Model.IsActive.Value)
                        {
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">Active</span>
                        }
                        else
                        {
                            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">Inactive</span>
                        }
                    </dd>
                </div>

                <div class="col-span-1">
                    <dt class="text-sm font-medium text-gray-500">@Html.DisplayNameFor(model => model.Color.ColorName)</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Html.DisplayFor(model => model.Color.ColorName)</dd>
                </div>

                <div class="col-span-1">
                    <dt class="text-sm font-medium text-gray-500">@Html.DisplayNameFor(model => model.Product.ProductName)</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Html.DisplayFor(model => model.Product.ProductName)</dd>
                </div>

                <div class="col-span-1">
                    <dt class="text-sm font-medium text-gray-500">@Html.DisplayNameFor(model => model.Size.SizeName)</dt>
                    <dd class="mt-1 text-sm text-gray-900">@Html.DisplayFor(model => model.Size.SizeName)</dd>
                </div>
            </dl>
        </div>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="flex items-center justify-between">
            <a href="@Url.Action("Index")" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                <svg class="-ml-1 mr-2 h-5 w-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
                </svg>
                Back to List
            </a>
            <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500">
                <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                </svg>
                Delete
            </button>
        </div>
    }
</div>
